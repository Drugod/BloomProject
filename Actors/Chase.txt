/*
 * Copyright (c) 2011-2021 Drugod, Ozymandias81, IvanDobrovski/Cruduxy/Marinelol
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

ACTOR --------ADVANCED-BEHAVIOUR-------------- {}
ACTOR ActorFunction : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 9999999
	States
	{
	Use:
	Pickup:
		TNT1 A 0
		Stop
	}
}

ACTOR A_ChaseX : ActorFunction //an improvised codepointer for movement not restricted to 8 primary directions
{
	States
	{
	Use:
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("A_ChaseX",1)
		TNT1 A 0 A_CheckFloor("Go")
		TNT1 A 0 A_Jump(64,"Go")
		Stop
	Go:
		TNT1 A 0 A_JumpIfInventory("Afraid", 1, "Fright")
		TNT1 A 0 A_JumpIfInventory("Fighting", 1, "Dodge")
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, random(-2,2), angle)
		TNT1 A 0 ThrustThing(angle*256/360, 1, 0, 0)
		TNT1 A 0 ThrustThingZ(0,random[ChaseX](-4,5),0,1)
		Stop
	Dodge:
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, random(-20,20), angle)
		TNT1 A 0 ThrustThing(angle*256/360, 1, 0, 0)
		TNT1 A 0 ThrustThingZ(0,random[ChaseX](-2,3),0,1)
		Stop
	Fright:
		TNT1 A 0 A_Jump(240,3)
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, 175, angle)
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, random(-5,5), angle)
		TNT1 A 0 A_Jump(128, 1)
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, random(-20,20), angle)
		TNT1 A 0 ThrustThing(angle*256/360, 1, 0, 0)
		TNT1 A 0 ThrustThingZ(0,random[ChaseX](-4,5),0,1)
		Stop
	}
}

ACTOR A_ChaseXMelee : A_ChaseX	// no strafing
{
	States
	{
	Use:
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("A_ChaseXMelee",1)
		TNT1 A 0 A_CheckFloor("Go")
		TNT1 A 0 A_Jump(64,"Go")
		Stop
	Go:
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((random(-16,16) + angle) * 65536)/360)
		TNT1 A 0 A_JumpIfInventory("Afraid", 1, "Fright")
		TNT1 A 0 A_JumpIfInventory("Fighting", 1, "Dodge")
		TNT1 A 0 A_JumpIfInventory("ProxScan",2,"Take")
		TNT1 A 0 A_GiveInventory("ProxScan",1)
		Stop
	Take:
		TNT1 A 0 A_TakeInventory("ProxScan",4)
		TNT1 A 0 ThrustThing(angle*256/360, 1, 0, 0)
		Stop
	Dodge:
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((random(-20,20) + angle) * 65536)/360)
		TNT1 A 0 A_JumpIfInventory("ProxScan",2,"Take")
		TNT1 A 0 A_GiveInventory("ProxScan",1)
		Stop
	Fright:
		TNT1 A 0 A_Jump(240,3)
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((180 + angle) * 65536)/360)
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((random(-5,5) + angle) * 65536)/360)
		TNT1 A 0 A_Jump(128, 1)
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((random(-20,20) + angle) * 65536)/360)
		TNT1 A 0 A_JumpIfInventory("ProxScan",2,"Take")
		TNT1 A 0 A_GiveInventory("ProxScan",1)
		Stop
	}
}

ACTOR A_ChaseXMelee2 : ActorFunction
{
	States
	{
	Use:
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("A_ChaseX",1)
	Go:
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 A_Jump(128, 2)
		TNT1 A 0 ACS_NamedExecuteAlways("ResetAngle", 0, ((random(-8,8) + angle) * 65536)/360)
		TNT1 A 0 ThrustThing(angle*256/360, 1, 0, 0)
		TNT1 A 0 A_JumpIfInventory("Afraid", 1, "Fright")
		TNT1 A 0 A_JumpIfInventory("ProxScan",2,"Take")
		TNT1 A 0 A_GiveInventory("ProxScan",1)
	Stop
	}
}